<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>redhawk</groupId>
		<artifactId>redhawk-integration</artifactId>
		<version>2.0.4-SNAPSHOT</version>
	</parent>
	<artifactId>redhawk-java-tools-docs</artifactId>
	<packaging>pom</packaging>
	<build>
		<plugins>
			<!-- Using resources plugin to get everything in the propery directory 
				structure to build one user manual. This will also rely on projects ahead 
				of it that need to generate resources to atleast have gone through compile 
				phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${project.build.directory}/asciidoc-workspace</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/asciidoc</directory>
								</resource>
								<!-- Take the necessary adoc files from redhawk-driver -->
								<resource>
									<directory>${project.parent.basedir}/redhawk-driver/target/asciidoc-workspace</directory>
									<targetPath>driver</targetPath>
									<excludes>
										<exclude>index.adoc</exclude>
									</excludes>
								</resource>
								<!-- Take the necessary adoc files from redhawk-rest -->
								<resource>
									<directory>${project.parent.basedir}/redhawk-rest/target/asciidoc</directory>
									<targetPath>${project.build.directory}/asciidoc-workspace/rest</targetPath>
									<includes>
										<include>overview.adoc</include>
										<include>paths.adoc</include>
										<include>definitions.adoc</include>
									</includes>
								</resource>
								<!-- Take the necessary adoc files from redhawk-connector -->
								<resource>
									<directory>${project.parent.basedir}/redhawk-connector/src/main/asciidoc</directory>
									<targetPath>${project.build.directory}/asciidoc-workspace/connector</targetPath>
								</resource>
								<!-- Take the necessary adoc files from redhawk-websocket -->
								<resource>
									<directory>${project.parent.basedir}/redhawk-websocket/src/main/asciidoc</directory>
									<targetPath>websocket</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.3</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.0-alpha.11</version>
					</dependency>
					<!-- Comment this section to use the default jruby artifact provided 
						by the plugin -->
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>1.7.21</version>
					</dependency>
					<!-- Comment this section to use the default AsciidoctorJ artifact provided 
						by the plugin -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>1.5.4.1</version>
					</dependency>
				</dependencies>
				<!-- TODO: may move asciidoc stuff to default location -->
				<configuration>
					<sourceDirectory>${project.build.directory}/asciidoc-workspace</sourceDirectory>
					<sourceDocumentName>index.adoc</sourceDocumentName>
				</configuration>
				<executions>
					<execution>
						<id>output-html</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/asciidoc/html</outputDirectory>
							<sourceHighlighter>coderay</sourceHighlighter>
							<backend>html5</backend>
							<doctype>book</doctype>
							<attributes>
								<toc>left</toc>
								<linkcss>false</linkcss>
							</attributes>
						</configuration>
					</execution>
					<execution>
						<id>generate-pdf-doc</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/asciidoc/pdf</outputDirectory>
							<backend>pdf</backend>
							<doctype>book</doctype>							
							<!-- Since 1.5.0-alpha.9 PDF back-end can use 'rouge' as well as 'coderay' 
								source highlighting -->
							<sourceHighlighter>coderay</sourceHighlighter>
							<attributes>
								<icons />
								<pagenums />
								<toc />
								<idprefix />
								<idseparator>-</idseparator>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>