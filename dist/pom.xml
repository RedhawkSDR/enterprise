<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>redhawk</groupId>
		<artifactId>redhawk-enterprise-integration</artifactId>
		<version>2.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>redhawk-enterprise-integration-dist</artifactId>
	<packaging>karaf-assembly</packaging>
	<name>REDHAWK :: ENTERPRISE INTEGRATION :: ASSETS</name>
	<description>
	RPM and Tar.gz that contains a KARAF Container preconfigured to work with Redhawk Integration Assets. Included as well
	are necessary dependencies for Jacord and a shell for interacting with the REDHAWK Driver.
	</description>
	<url>http://maven.apache.org</url>
	<properties>
		<karaf.home>${runtime.basedir}/karaf</karaf.home>
		<jrepl.home>${runtime.basedir}/shell</jrepl.home>
		<jacorb.version>3.8</jacorb.version>
		<jrepl.version>428</jrepl.version>
	</properties>
	<dependencies>
		<dependency>
			<!-- scope is compile so all features (there is only one) are installed 
				into startup.properties and the feature repo itself is not added in etc/org.apache.karaf.features.cfg 
				file -->
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>framework</artifactId>
			<type>kar</type>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>framework</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>spring</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!-- scope is runtime so the feature repo is listed in etc/org.apache.karaf.features.cfg 
				file, and features will installed into the system directory if specify in 
				the plugin configuration -->
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>standard</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>
		<dependency>
			<groupId>redhawk.karaf</groupId>
			<artifactId>redhawk-enterprise-integration</artifactId>
			<version>${project.version}</version>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>karaf-maven-plugin</artifactId>
				<version>${karaf.maven.plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<startupFeatures>
						<feature>eventadmin</feature>
					</startupFeatures>
					<bootFeatures>
						<feature>standard</feature>
						<feature>war</feature>
						<feature>redhawk-enterprise-integration-all</feature>
					</bootFeatures>
					<workDirectory>${project.build.directory}/${runtime.dir}/karaf-${karaf.version}</workDirectory>
					<archiveTarGz>false</archiveTarGz>
					<archiveZip>false</archiveZip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-shell-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/shell</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/shell</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-jacorb-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/jacorb-deps</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/jacorb</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-assembly</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/assembly</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/assembly</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-scripts</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/scripts</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-certs</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/karaf-${karaf.version}/certs</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/certs</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-additional-configuration</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/karaf-${karaf.version}/etc</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/etc</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Download deps for any other functionality -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>shell-deps</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/shell/lib</outputDirectory>
							<artifactItems>
								<!-- https://github.com/albertlatacz/java-repl -->
								<artfactItem>
									<groupId>com.javarepl</groupId>
									<artifactId>javarepl</artifactId>
									<version>${jrepl.version}</version>
								</artfactItem>
								<artifactItem>
									<groupId>redhawk</groupId>
									<artifactId>redhawk-driver</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<!-- Download all the stuff jacorb needs -->
					<execution>
						<id>jacorb-deps</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${runtime.dir}/jacorb-deps</outputDirectory>
							<artifactItems>
								<artfactItem>
									<groupId>org.jacorb</groupId>
									<artifactId>jacorb</artifactId>
									<version>${jacorb.version}</version>
								</artfactItem>
								<artfactItem>
									<groupId>org.jacorb</groupId>
									<artifactId>jacorb-omgapi</artifactId>
									<version>${jacorb.version}</version>
								</artfactItem>
								<artfactItem>
									<groupId>org.jacorb</groupId>
									<artifactId>jacorb-idl-compiler</artifactId>
									<version>${jacorb.version}</version>
								</artfactItem>
								<artfactItem>
									<groupId>org.jacorb</groupId>
									<artifactId>jacorb-services</artifactId>
									<version>${jacorb.version}</version>
								</artfactItem>
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-api</artifactId>
									<version>1.7.14</version><!-- TODO: There are newer versions out -->
								</artifactItem>
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-jdk14</artifactId>
									<version>1.7.14</version><!-- TODO: There are newer versions out -->
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<!-- Concatenate additional params to default configuration propertires -->
					<execution>
						<id>cat-system.properties</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<concat destfile="${project.build.directory}/${runtime.dir}/karaf-${karaf.version}/etc/system.properties" append="true">
					 				<fileset dir="src/main/additions">
					 					<include name="system.properties.additions" />
					 				</fileset>								
								</concat>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>cat-logging.properties</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<concat destfile="${project.build.directory}/${runtime.dir}/karaf-${karaf.version}/etc/org.ops4j.pax.logging.cfg" append="true">
					 				<fileset dir="src/main/additions">
					 					<include name="logging.additions" />
					 				</fileset>								
								</concat>
							</target>
						</configuration>
					</execution>					
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>REDAWK_JAVA_TOOLS_DIST</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${runtime.dir}</finalName>
							<descriptors>
								<descriptor>${project.build.directory}/assembly/assembly.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.5</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>attach-rpm</id>
						<goals>
							<goal>attached-rpm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<group>REDHAWK Enterprise Integration</group>
					<license>LGPLv3</license>
					<release>${release}</release>
					<prefix>${redhawk.user.home}</prefix>
					<requires>
						<require>java-1.8.0-openjdk</require>
					</requires>
					<mappings>
						<mapping>
							<directory>${runtime.basedir}</directory>
							<username>root</username>
							<groupname>redhawk</groupname>
							<filemode>755</filemode>
							<sources>
								<source>
									<location>${project.build.directory}/${runtime.dir}</location>
								</source>
							</sources>
						</mapping>
					</mappings>
					<preinstallScriptlet>
						<scriptFile>${project.build.directory}/scripts/preinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>
					<preremoveScriptlet>
						<scriptFile>${project.build.directory}/scripts/preremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>
					<postremoveScriptlet>
						<scriptFile>${project.build.directory}/scripts/postremove.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>
	<!-- Profile to create simple docker image for this RPM -->
	<profiles>
		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- https://mvnrepository.com/artifact/com.spotify/docker-maven-plugin -->
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.4.14</version>
						<executions>
							<execution>
								<id>default</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
									<!--<goal>push</goal> -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>redhawk/rei</repository>
							<dockerDirectory>${basedir}</dockerDirectory>
							<imageName>redhawk/rei</imageName>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
