#GitLab CI File for REDHAWK Integration Asset
#Tutuorial on using GitLab CI: https://docs.gitlab.com/ce/ci/quick_start/README.html
#Docs on format of CI file: https://docs.gitlab.com/ce/ci/yaml/README.html
stages:
  - build
  - test  
  - deploy

variables:
  redhawk_version: '2.0-nightly'
  enterprise_version: '2.0.1'
.common: &common
  image: ${docker_registry}redbus/maven:3-jdk-8
  stage: build
  tags:
    - mvn-cache
  before_script:
    - mvn -P CFDependencies clean install -B -U
  after_script:
    - mkdir -p output
    - cp docs/target/asciidoc/html/index.html output/index.html #Docs artifacts
    - cp docs/target/asciidoc/pdf/index.pdf output/REDHAWK_Enterprise_v$enterprise_version.pdf
    - cp docs/target/rpm/redhawk-enterprise-integration-docs/RPMS/noarch/*.rpm output/ #RPM for installing REDHAWK Java Tools Docs in KARAF
    - cp dist/target/redhawk-enterprise-integration.tar.gz output/ #Tar of full distribution
    - cp dist/target/rpm/redhawk-enterprise-integration-dist/RPMS/noarch/*.rpm output/ #RPM for distribution
    - cp demo/demo-dist/target/rpm/redhawk-enterprise-integration-demo-dist/RPMS/noarch/*.rpm output/ #RPM for deploying demos
    - cp demo/demo-dist/target/redhawk-enterprise-integration-demo-dist.tar.gz output/ #tar for deploying demos
    - tar zcvf output.tar.gz output/
  artifacts:
    name: $CI_JOB_NAME
    paths:
      - output/index.html
      - output/*.pdf
      - output/*.rpm
      - output.tar.gz
    expire_in: 3 days

.deploy-common: &deploy-common
  image: centos:7
  stage: deploy
  dependencies: []
  script:
  - if [ -n "$jenkins_url" ]; then
      curl --insecure -X POST $jenkins_url/job/$jenkins_job/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
    fi

#Common commands for the compose jobs
.compose-test-common: &compose-test-common
  script:
    - docker-compose --project-name ${dist}_${arch}_${CI_JOB_ID} up --force-recreate -d redhawk
    - docker-compose --project-name ${dist}_${arch}_${CI_JOB_ID} exec -T redhawk yum install -y redhawk-basic-components redhawk-basic-waveforms
    - docker-compose --project-name ${dist}_${arch}_${CI_JOB_ID} up --exit-code-from rei
    - find */target/failsafe-reports -name 'TEST*.xml' | tar cvf $CI_PROJECT_DIR/output.tar --files-from -
  after_script:
    - docker-compose down

build:
  <<: *common
  script:
    - mvn -Djava.io.tmpdir=./ deploy -P docs,jaxb-generation,default -B -U -Drelease=0.$CI_PIPELINE_ID
  only:
    - branches

build-release:
  <<: *common
  script:
    - mvn -Djava.io.tmpdir=./ clean install -P docs,jaxb-generation,default -B -U
  only:
    - tags

test-install:
  image: centos:7
  stage: test
  script:
    - yum install -y `find output -name '*.rpm'`

test-el7-x86_64:
  <<: *compose-test-common
  image: ${docker_registry}utils/docker-compose:latest
  stage: test
  tags:
    - mvn-cache
  dependencies: []
  variables:
    redhawk_version: 2.1-nightly
    dist: el7
    arch: x86_64
  artifacts:
    name: $CI_JOB_NAME
    paths:
      - output.tar
    expire_in: 3 days

test-el6-x86_64:
  <<: *compose-test-common
  image: ${docker_registry}utils/docker-compose:latest
  stage: test
  tags:
    - mvn-cache
  dependencies: []
  variables:
    redhawk_version: 2.1-nightly
    dist: el6
    arch: x86_64
  artifacts:
    name: $CI_JOB_NAME
    paths:
      - output.tar
    expire_in: 3 days

test-el6-i386:
  <<: *compose-test-common
  image: ${docker_registry}utils/docker-compose:latest
  stage: test
  tags:
    - mvn-cache
  dependencies: []
  variables:
    redhawk_version: 2.1-nightly
    dist: el6
    arch: i686
  artifacts:
    name: $CI_JOB_NAME
    paths:
      - output.tar
    expire_in: 3 days

#Trigger a Jenkins job to aggregate artifacts there
deploy:
  variables:
    jenkins_job: $CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME
  <<: *deploy-common
  only:
    - branches

deploy-release:
  variables:
    jenkins_job: 2.1.1/job/$CI_PROJECT_NAME-$enterprise_version
  <<: *deploy-common
  only:
    - tags
