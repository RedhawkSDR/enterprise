<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>redhawk</groupId>
		<artifactId>redhawk-demo-parent</artifactId>
		<version>2.1.2-SNAPSHOT</version>
	</parent>
	<artifactId>redhawk-enterprise-integration-demo-dist</artifactId>
	<packaging>rpm</packaging>
	<name>REDHAWK :: ENTERPRISE INTEGRATION :: DEMO DIST</name>
	<description>Distribution for REDHAWK Enterprise Integration Demo</description>
	<properties>
		<demo.directory>${runtime.basedir}/demos</demo.directory>
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-assembly</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/assembly</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/assembly</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>REI_DEMO_DIST</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}</finalName>
							<descriptors>
								<descriptor>${project.build.directory}/assembly/assembly.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.5</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>generate-rpm</id>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<license>LGPLv3</license>
					<release>${release}</release>
					<group>REDHAWK Enterprise Integration</group>
					<requires>
						<require>redhawk-enterprise-integration-dist</require>
					</requires>
					<defaultUsername>root</defaultUsername>
					<defaultGroupname>redhawk</defaultGroupname>
					<defaultFilemode>755</defaultFilemode>
					<mappings>
						<mapping>
							<directory>${demo.directory}/camel-event-channel</directory>
							<sources>
								<source>
									<location>${project.parent.basedir}/camel-event-channel/src/main/resources</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${demo.directory}/webapp</directory>
							<sources>
								<source>
									<location>${project.parent.basedir}/redhawk-webapp/target/redhawk-demo-webapp-${project.version}.jar</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${demo.directory}/metrics</directory>
							<sources>
								<source>
									<location>${project.parent.basedir}/redhawk-metrics/target/redhawk-metrics-webapp-${project.version}.jar</location>
								</source>
							</sources>
						</mapping>						
					</mappings>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>docs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<encoding>UTF-8</encoding>
									<outputDirectory>${project.build.directory}/asciidoc-workspace</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/asciidoc</directory>
										</resource>
										<!-- Copy artifacts from demo modules -->
										<resource>
											<directory>${project.parent.basedir}/camel-event-channel</directory>
											<includes>
												<include>README.adoc</include>
											</includes>
										</resource>
										<resource>
											<directory>${project.parent.basedir}/redhawk-webapp</directory>
											<includes>
												<include>redhawk-demo-webapp.adoc</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.3</version>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>1.5.0-alpha.11</version>
							</dependency>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>1.7.21</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact 
								provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>1.5.4.1</version>
							</dependency>
						</dependencies>
						<!-- TODO: may move asciidoc stuff to default location -->
						<configuration>
							<sourceDirectory>${project.build.directory}/asciidoc-workspace</sourceDirectory>
							<sourceDocumentName>index.adoc</sourceDocumentName>
						</configuration>
						<executions>
							<execution>
								<id>output-html</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/asciidoc/html</outputDirectory>
									<sourceHighlighter>coderay</sourceHighlighter>
									<backend>html5</backend>
									<doctype>book</doctype>
									<attributes>
										<toc>left</toc>
										<linkcss>false</linkcss>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-doc</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/asciidoc/pdf</outputDirectory>
									<backend>pdf</backend>
									<doctype>book</doctype>
									<!-- Since 1.5.0-alpha.9 PDF back-end can use 'rouge' as well as 
										'coderay' source highlighting -->
									<sourceHighlighter>coderay</sourceHighlighter>
									<attributes>
										<icons />
										<pagenums />
										<toc />
										<idprefix />
										<idseparator>-</idseparator>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
